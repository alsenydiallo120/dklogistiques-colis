

from django.core.management.base import BaseCommand
import os

class Command(BaseCommand):
    def add_arguments(self, parser):
        parser.add_argument("folder_name", type=str)
        # parser.add_argument("i",type=str)

    def handle(self, *args, **kwargs):
        name = kwargs['folder_name']
        os.mkdir('templates/'+name)

        open(name+'/urls.py', 'w+')
        open(name+'/forms.py', 'w+')
        open('templates/'+name+'/create.html', 'w+')
        open('templates/'+name+'/edit.html', 'w+')
        open('templates/'+name+'/index.html', 'w+')

        create = open('templates/'+name+'/create.html', "a")
        edit = open('templates/'+name+'/edit.html', "a")
        index = open('templates/'+name+'/index.html', "a")
        urls = open(name+'/urls.py', "a")
        forms = open(name+'/forms.py', "a")
        # sidebar = open('templates/includes/sidebar.html', "a")
    
        # URLS

        urls.write("from django.urls import path")
        urls.write("\n")
        urls.write("from django.contrib.auth.decorators import login_required, permission_required")
        urls.write("\n")
        urls.write("from .views import index,create,edit,delete")
        urls.write("\n")
        urls.write("\n")
        urls.write("urlpatterns = [")
        urls.write("\n")
        urls.write("\tpath('', login_required(index.as_view()),name='"+name+"-index'),")
        urls.write("\n")
        urls.write("\tpath('create/',login_required(create.as_view()),name='"+name+"-create'),")
        urls.write("\n")
        urls.write("\tpath('edit/<int:pk>/',login_required(edit.as_view()),name='"+name+"-edit'),")
        urls.write("\n")
        urls.write("\tpath('delete/<int:pk>/',login_required(delete.as_view()),name='"+name+"-delete'),")
        urls.write("\n")
        urls.write("]")
        urls.write("\n")

        # VIEWS
        views = open(name+'/views.py', "a")

        views.write("from django.views.generic import CreateView, ListView, DeleteView, UpdateView")
        views.write("\n")

        views.write("from django.urls import reverse_lazy")
        views.write("\n")

        views.write("from django.contrib import messages")
        views.write("\n")
        modeleUpper = name.capitalize()
        modele = modeleUpper[:-1]
        form = modele+"Form"

        # FORMS

        forms.write("from django import forms")
        forms.write("\n")
        forms.write("from .models import "+modele)
        forms.write("\n")
        forms.write("\n")
        forms.write("class "+form+"(forms.ModelForm):")
        forms.write("\n")
        forms.write("\tclass Meta:")
        forms.write("\n")
        forms.write("\t\tmodel="+modele)
        forms.write("\n")
        forms.write("\t\tfields='__all__'")
        forms.write("\n")
        forms.write("\n")
        forms.write("\t\twidgets={")
        forms.write("\n")
        forms.write("\t\t\t'dates':forms.DateInput(attrs={")
        forms.write("\n")
        forms.write("\t\t\t\t'type':'date'")
        forms.write("\n")
        forms.write("\t\t\t})")
        forms.write("\t\t}")
        forms.write("\n")

        views.write("from .models import "+modele)
        views.write("\n")

        views.write("from .forms import " + form)
        views.write("\n")
        views.write("\n")

        views.write("class create(CreateView):")
        views.write("\n")
        views.write("\tmodel = "+modele)
        views.write("\n")
        views.write("\tform_class = "+form)
        views.write("\n")
        views.write("\ttemplate_name = '"+name+"/create.html'")
        views.write("\n")
        views.write("\tsuccess_url = reverse_lazy('"+name+"-index')")
        views.write("\n")
        views.write("\n")

        views.write("class index(ListView):")
        views.write("\n")
        views.write("\tmodel = "+modele)
        views.write("\n")
        views.write("\ttemplate_name = '"+name+"/index.html'")
        views.write("\n")
        views.write("\tcontext_object_name = '"+name+"'")
        views.write("\n")
        views.write("\n")

        views.write("class edit(UpdateView):")
        views.write("\n")
        views.write("\tmodel = "+modele)
        views.write("\n")
        views.write("\tform_class = "+form)
        views.write("\n")
        views.write("\ttemplate_name = '"+name+"/edit.html'")
        views.write("\n")
        views.write("\tsuccess_url = reverse_lazy('"+name+"-index')")
        views.write("\n")
        views.write("\n")

        views.write("class delete(DeleteView):")
        views.write("\n")
        views.write("\tmodel = "+modele)
        views.write("\n")
        views.write("\ttemplate_name = '"+name+"/edit.html'")
        views.write("\n")
        views.write("\tsuccess_url = reverse_lazy('"+name+"-index')")
        views.write("\n")
        views.write("\tsuccess_message = 'Suprression effectuee avec succes'")
        views.write("\n")
        views.write("\n")

        # CRETE 

        create.write("{% extends 'base.html' %}")
        create.write("\n")
        create.write("{% load crispy_forms_tags %}")
        create.write("\n")
        create.write("{% block Content %}")
        create.write("\n")
        create.write("<div class='row'>")
        create.write("\n")
        create.write("<div class='col-md-12'>")
        create.write("\n")
        create.write("<div class='card'>")
        create.write("\n")
        create.write("<div class='card-header text-dark'>")
        create.write("\n")
        create.write("<div class='card-title'>")
        create.write("\n")
        create.write("</div>")
        create.write("\n")
        create.write("<div class='card-body'>")
        create.write("\n")
        create.write("<form action='' method='post'>")
        create.write("\n")
        create.write("{% csrf_token %} {{ form|crispy }}")
        create.write("\n")
        create.write("<button class='btn btn-primary' type='submit'>Valider</button>")
        create.write("\n")
        create.write("</form>")
        create.write("\n")
        create.write("</div>")
        create.write("\n")
        create.write("</div>")
        create.write("\n")
        create.write("</div>")
        create.write("\n")
        create.write("</div>")
        create.write("\n")
        create.write("{% endblock %}")
        create.write("\n")

        # EDIT

        edit.write("{% extends 'base.html' %}")
        edit.write("\n")
        edit.write("{% load crispy_forms_tags %}")
        edit.write("\n")
        edit.write("{% block Content %}")
        edit.write("\n")
        edit.write("<div class='row'>")
        edit.write("\n")
        edit.write("<div class='col-md-12'>")
        edit.write("\n")
        edit.write("<div class='card'>")
        edit.write("\n")
        edit.write("<div class='card-header text-dark'>")
        edit.write("\n")
        edit.write("<div class='card-title'>")
        edit.write("\n")
        edit.write("</div>")
        edit.write("\n")
        edit.write("<div class='card-body'>")
        edit.write("\n")
        edit.write("<form action='' method='post'>")
        edit.write("\n")
        edit.write("{% csrf_token %} {{ form|crispy }}")
        edit.write("\n")
        edit.write("<button class='btn btn-primary' type='submit'>Modifier</button>")
        edit.write("\n")
        edit.write("</form>")
        edit.write("\n")
        edit.write("</div>")
        edit.write("\n")
        edit.write("</div>")
        edit.write("\n")
        edit.write("</div>")
        edit.write("\n")
        edit.write("</div>")
        edit.write("\n")
        edit.write("{% endblock %}")
        edit.write("\n")

        # INDEX

        index.write("{% extends 'base.html' %}")
        index.write("\n")
        index.write(" {% block Content %}")
        index.write("\n")

        index.write("<div class='row'>")
        index.write("\n")

        index.write("\t<div class='col-sm-12'>")
        index.write("\n")
        index.write("\t\t<div class='card'>")
        index.write("\n")
        index.write("\t\t\t<div class='card-header text-dark'>")
        index.write("\n")
        index.write("\t\t\t\t<h6 class='card-title text-dark'>Liste des "+ name+ "</h6>")
        index.write("\n")
        index.write("\t\t\t</div>")
        index.write("\n")
        index.write("\t\t\t<div class='card-body'>")
        index.write("\n")
        index.write("\t\t\t\t<div class='table-responsive'>")
        index.write("\n")
        index.write("\t\t\t\t\t<table class='datatable table table-striped'>")
        index.write("\n")
        index.write("\t\t\t\t\t\t<thead class='thead-light'>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t<tr>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t\t<th>N</th>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t\t<th>Actions</th>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t</tr>")
        index.write("\n")
        index.write("\t\t\t\t\t\t</thead>")
        index.write("\n")
        index.write("\t\t\t\t\t\t</tbody>")
        index.write("\n")
        index.write("\t\t\t\t\t\t{% for m in " + name+ "%}")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t<tr>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t\t<td>{{m.id}}</td>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t\t <td class='text-center'>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t\t\t<a class='btn btn-success btn-sm' href='{% url '"+name+"-edit' m.id %}'><i class='bi bi-pencil-square'></i></a> &nbsp; &nbsp;")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t\t\t<button class='delete btn btn-danger btn-sm' data-bs-toggle='modal' data-bs-target='#delete' data-href='{% url '"+name+"-delete' m.id %}'><i class='bi bi-trash'></i></button>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t\t</td>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t</tr>")
        index.write("\n")
        index.write("\t\t\t\t\t\t\t{% endfor %}")
        index.write("\n")
        index.write("\t\t\t\t\t\t</tbody>")
        index.write("\n")
        index.write("\t\t\t\t\t</table>")
        index.write("\n")
        index.write("\t\t\t\t</div>")
        index.write("\n")
        index.write("\t\t\t</div>")
        index.write("\n")
        index.write("\t\t</div>")
        index.write("\n")
        index.write("\t</div>")
        index.write("\n")
        index.write("</div>")
        index.write("\n")
        index.write("{% endblock Content %}")
        index.write("\n")
       
     
